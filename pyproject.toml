[project]
authors = [{ name = "Guillaume Gauvrit", email = "guillaume@gauvr.it" }]
description = "High-level web framework"
name = "fastlifeweb"
license = { text = "MIT" }
readme = "README.md"
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Internet :: WWW/HTTP",
  "Typing :: Typed",
]
version = "0.26.0"
requires-python = ">=3.11"
dependencies = [
  "fastapi[standard] >=0.115.4,<0.116.0",
  "itsdangerous >=2.1.2,<3",
  "jinjax >=0.48,<0.49",
  "markupsafe >=2.1.3,<3",
  "multidict >=6.0.5,<7",
  "pydantic >=2.5.3,<3",
  "pydantic-settings >=2.0.3,<3",
  "python-multipart >=0.0.13,<1",
  "venusian >=3.0.0,<4",
]

[project.urls]
Homepage = "https://mardiros.github.io/fastlife"
Documentation = "https://mardiros.github.io/fastlife"
Repository = "https://github.com/mardiros/fastlife.git"
Issues = "https://github.com/mardiros/fastlife/issues"
Changelog = "https://mardiros.github.io/fastlife/user/changelog.html"

[project.optional-dependencies]
testing = ["beautifulsoup4"]
docs = [
  "furo >=2024.5.6",
  "linkify-it-py >=2.0.3,<3",
  "myst-parser >=4.0.0,<5",
  "sphinx >=7.0.1,<8",
  "sphinx-autodoc2 >=0.5.0,<1",
]

[dependency-groups]
dev = [
  "babel >=2.16.0,<3",
  "beautifulsoup4 >= 4.12.2,<5",
  "email-validator >= 2.0.0.post2,<3",
  "heroicons >= 2.7.0,<3",
  "httpx >= 0.28.1,<0.29",
  "hypercorn >= 0.14.4,<0.15",
  "mypy >= 1.4.0,<2",
  "pytailwindcss >= 0.2.0,<0.3",
  "pytest >= 8.2.0,<9",
  "pytest-asyncio >=0.26.0",
  "pytest-cov >= 4.1.0,<5",
  "pytest-playwright >= 0.7.0,<0.8",
  "sphinx >=7.0.1,<8",
  "tursu>=0.15.1,<1",
  "types-beautifulsoup4 >= 4.12.0.6,<5",
  "uvicorn>=0.34.0",
]
doc = [
  "furo >=2024.5.6",
  "linkify-it-py >=2.0.3,<3",
  "myst-parser >=4.0.0,<5",
  "sphinx >=7.0.1,<8",
  "sphinx-autodoc2 >=0.5.0,<1",
]

[tool.uv]
default-groups = []

[tool.pdm.build]
includes = ["src", "CHANGELOG.md"]
excludes = ["tests"]

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
venvPath = ".venv"

[[tool.mypy.overrides]]
module = "fastlife.*"
disallow_any_generics = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["behave", "venusian", "docutils"]
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
  "B",   # bug bear security warning
  "I",   # isort import order
  "F",   # pyflakes
  "UP",  # alter when better syntax is available
  "RUF", #  the ruff devleoper's own rules
]
ignore = ["RUF022"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
  "experiment: experiment with some context",
  "dev: developper helpers to exclude from func tests.",
  "wip: work in progress.",
  "icons: show icons.",
  "openapi: open api tests.",
]

filterwarnings = [
  "error",
  'ignore:.*import python_multipart',                                                # starlette
  'ignore:.*Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning', # venusian
  'ignore:.*websockets.legacy is deprecated.*',                                      # uvicorn
  'ignore:.*WebSocketServerProtocol.*',                                              # uvicorn
  'ignore:.*find_module\(\) is deprecated.*:DeprecationWarning',
  'ignore:.*FileFinder.find_loader\(\) is deprecated.*:DeprecationWarning',
  'ignore:.*Pydantic serializer warnings.*:UserWarning',
]
testpaths = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "except ImportError",
  "\\s+\\.\\.\\.$",
  "# coverage: ignore",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
